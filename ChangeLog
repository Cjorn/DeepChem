CHANGES
=======

* merged conflicts
* staging
* Some minor fixes to Tox21 models
* Fixing some leftover changes in test_hyperparam_opt
* Renaming files for deepchem->dc transition
* Fix to missed transformer
* Some more dataset loading fixes
* Fixes to transformers
* More test fixes
* Debugging failing tests
* More refactor
* Refactoring continues!
* Update README.md
* Update README.md
* Benchmark
* Benchmark
* Benchmark
* Benchmark script added
* Some tweaks
* Test fixes and res model experiments
* Resi-LSTM overfit test passes
* deepchem->dc many tests
* Changes
* Continuing deepchem->dc transition
* Loosening regression to make tests more stable
* More shuffling for new import dc API
* First graph-conv example on large dataset
* Siamese model performance still poor with more training
* First support model numbers (few epochs, bad numbers)
* Adding dataset featurization code
* First attempts at siamese model
* Initial commit of low-data RFs
* Transformers use Dataset.transform()
* Adding fixed random seeds to stabilize overfit tests
* Loosening bounds on graph-conv test
* Setting random seed in tf/np for graph/support tests
* Task Splitter implementation
* time function change
* Preliminary commit of task splits
* Changes to support transformers with NumpyDataset
* Benchmark included
* Two more zip instances
* Handle zip py3
* Cleanup and py3 support and prelim resi-lstm tests
* Partial fixes for python3 failures
* Attempting to add fixed graph to prevent test runner issues
* updated openbabel install command
* Fixes for crashing tests
* Basic overfit tests now pass meaningfully
* Support models overfit with no training... Not sure if due to support/test overlap
* Overfit AttnLSTM test runs to completion, fails due to accuracy
* AttnLSTM overfit runs, but doesn't eval (failing)
* Graph topology example broken somewhere. Need to debug
* Test reveals padding issue for batches. Not sure how to fix yet
* Support generator passes basic tests
* Add in support models and simple tests (failing)
* Graph Conv Overfit and preliminary support tests
* Accuracy is nonzero now..
* Overfit test runs but fails (save/load issues I believe)
* Adding in multitask classifier
* Added sequential example topology to tests
* Added in keras layers and more tests
* benchmark
* adding benchmark test
* Cleaned up tests for ConvMolFeaturizer
* More changes
* Initial commit of graph conv code
* Local changes
* change path of dataset loading functions
* change path of dataset loading functions
* Shrinking the size to make example run faster
* Removing xrange for python3
* First commit of robust models
* First commit of robust models
* Cleanup
* Remove doubled softmax and handle keras edge case
* Fixed tensorflow predict
* circumvent the path problem of dataset loading
* change path for dataloading parts
* Changes for support models
* Minor update to documentation
* CDF and Power X transforms
* Preliminary CDF and Power Transform work
* Merging in upstream changes
* Fixed errors related to padding and Tensorflow
* Some more predict fixes
* Adding guide for contributors
* Adding table of contents
* Removing old binary file
* Removing broken example
* Local script changes
* Debugging push
* Attempting to figure out why environment vars not seen
* Trying with test environment variable
* Trying again with encrypted variables
* Attempting to get travis s3 variables set
* Moving conf into source directory
* Adding conf into correct place
* Attempting to move docs generation onto travis
* Moving scripts out of installed part of deepchem
* Getting changes together
* Removing a number of outdated RST files
* Some more cleanups and deletions
* Some more file removals
* Many changes
* Update index.rst
* Update README with "About Us"
* Handling merge
* Use mdtraj to build neighbor lists
* Bug fix
* Fixed error on Python 2
* Continuing Dataset refactoring
* Continuing refactoring of Dataset
* Some changes for vanilla graph-conv
* Beginning of Dataset refactoring
* Readme tweaks
* Activated docs-pushes on PRs
* Debugging why docs aren't getting updated
* Cleanup
* Thought better of using miniconda
* First attempt at fixes
* Anaconda instructions
* Update README to mention python 3.5 support
* Reenabled tests in test_datasets.py
* Possible fix for error on travis
* kerasify changes
* Debugging problems with travis
* CDF Transformer (WIP)
* Support Python 3
* CDF Transformer (WIP)
* Fix FAQ
* Added openbabel failure to FAQ
* Updates to splitters
* Splitter tests now passing
* Preliminary splits implementation. Still buggy
* Bugfix
* Updating examples
* Small fix to loosen overfit test
* Should have fixed (almost) all tests
* Removing cruft
* Fix some more broken model tests
* Fixed generalization tests
* Ported overfit tests
* Porting singletask-to-multitask initial
* Partial fixes to hyperparameter opt
* Basic tensorflow test passes
* Continuing refactor of TensorflowModel
* Continuing refactor of tensorflow models
* Basic tensorflow test passes now
* cleanup
* Removing model_params
* Progres refactoring keras and sklearn models
* Update backend information
* First step of Model refactor
* Create README.md
* Cleanup
* Getting started section
* Adding MKL FAQ
* Fixes to nblist featurization
* Update README.md
* Update README.md
* Update README.md
* Fixing bugs
* First attempt at Complex Featurizer
* Cleanup
* Fixed broken pdbbind example
* Starting refactor of complex support
* Sparse shuffle support
* Update README.md
* Update README.md
* Cleanup
* Attempted test_api fix. Turning off dropout
* Updates to build
* Attempt at tensorflow
* Cleanup
* Cleanup
* Running all tests with Theano
* Accidentally removed keras install. Put back in
* Using theano git head
* Adding Theano support from head
* Trying to explicitly set theano
* Turning off tensorflow keras backend
* Running more tests
* Run all overfit tests
* Another test
* Wrong command
* Minimal travis config for debug
* Removing theano backend
* Swapping up to latest keras
* Fix to padding
* Fixed README for scikit-learn and nose
* Cleanup
* Potential fixes
* Padding batches
* Some test fixes and cleanup
* Preliminary commit for arbitrary object featurizers
* Changed file directory in test cases for feat_multitask_example
* Updated implementation of LogTransformer with base case
* Implementation of log transform with selection options for features and tasks
* Cleanup
* Adds NeighborListAtomicCoordinates and tests
* Adding tests for neighborlist. Still bugs
* Implementation of Neighbor-list featurization in progress
* New comments and cleanup
* Cleanup and some test fixes
* Cleanup and hyperparameter fix incorporation
* Batch of changes
* Cleanup
* Removing det_iterbatches
* Singletask DNN initial
* removed space
* tabs
* style fixes
* more bugs
* minor bug:
* tidying up
* init syntax error
* decomposed to ensure valid and test split have hits. need to test
* split currently works, but fails valid split. decomposing to avoid repeating code
* fixing tests
* more testing
* test stuff
* more
* more fixes
* more fixing
* fixing test bug
* rewrote code -- changed from pandas implementation to numpy
* test
* rewriting
* Cleanup
* Bug fix in Dataset select function
* test
* trying to fix tests
* running testsg
* fixing merge issues -- fixed
* init
* edited csv
* more
* more tests
* more
* more debugging
* trying to fix test
* Commented out sparsity test to verify integrity of y array
* testing
* sparse
* sp
* Sparse
* stuff
* sparse
* sparse
* Sparse
* updating sparsity test
* adding test to test for initial sparsity
* edited author
* finished tests -- passes
* tests
* testing
* adding robustness
* numpy split issue
* fixes
* fixing tests
* fixing and adding tests
* fixed bugs in tests, but not done
* stratified splitter code
* update
* sparse stuff
* testing something
* Adding multiple rounds of reshard shuffle
* Shuffle each shard added
* Variants of shuffling
* First attempts at faster shuffling routine
* Fixing small bug in datasets
* Fixes to metrics/datasets
* fixes to multitask handling
* Cleanup
* Leftover changes
* Renamed DataFeaturizer to DataLoader
* Some bugfixes
* Some debugging progress
* Simple shape fix
* Small debugging progress. Continue in follow-on commits
* Potential speedups
* Debugging broken tests
* Some test fixes
* Simplifying user defined features
* First draft of stripped down featurization
* Some debug statements to profile
* Fixing minor break
* Fixed some bugs
* First draft of new featurization attempt
* Final edits (hopefully)
* Attempting to fix spacing issues
* Committing latest change
* Updated installation direction
* Cleanup
* Better multitask data splits
* Cleanup
* Splitting seems to work reasonably on NCI dataset now
* Added select feature to dataset
* Fixing broken tests
* Fixing one of broken tests. Couple more remain
* Fixes to parallel featurization
* Some fixes to NCI datasets/loading
* Making it easier to process sharded datasets
* fixing small issues
* changed load disk method to accept list of multiple csv files and other random small issues
* wrote load from two files function to handle nci dataset
* Removing debugging cruft
* Removing yet another logging import
* Removing obsolete logging import that's causing problems
* Yet another config tweak for travis
* More fiddling with travis
* Trying to handle travis issues
* nci data and rf & dnn scripts
* Bag of recent changes
* Cleanup
* next round of edits
* Fixes
* Fixes to multitask data loading
* Some bugfixes
* Sample pdbbind
* Grab-bag of changes
* Fixes to get examples running again
* Cleanup
* Fixes to datasets tests
* Fixed test_load
* Fixes to tox21 sklearn example
* Fixes to more tests
* More test refactorings
* Still more test fixes
* test fixes
* Splits on datasets
* Yet more refactoring
* Partial fix for data split issues
* Fixed some of the tests
* First round of refactoring
* PCBA TF Example
* Cleanup
* PCBA Logistic models
* Cleanup
* Fix tricky error with transformers
* Fixed broken transformers
* First pass at fix for relative paths
* Now have failing test case
* Remove old sklearn models example
* Remove debug flag
* GPL changes
* MUV models
* Cleanup
* Potential fix to leakage bug
* Add tests for proper dropping of unparseable compounds
* Update QuantumMachine notebook with sanely performing models and results
* Bug fix for CoulombMatrix class
* Fix sdf reader test description
* Add .sdf reader test
* Removed unneeded lines in featurizers/__init__.py
* New QuantumMachine notebook with featurization
* SDF input file reader functional
* Cleanup
* Some cleanup and minor-bugfixes on tox21 examples
* Potential bugfix
* Finalizing BACE DNN example
* Final draft of bace_rf
* BACE models
* Loading bace data
* Trying new keras/theano out
* Cruft cleanup
* Fixing some broken tests
* Cleaning cruft
* Moving code in to start testing process
* Debugging of multitask
* Turns out reload tests weren't committed
* Cleanup and bug fixes
* Multitask tests
* Cleanedup examples
* Cleaned up MUV simple example
* Comment out _pad_batch
* Cleanup of cruft code
* Debug fix for regression
* Many changes
* Added restore test which tensorflow models pass\!
* Moved dataset reload tests to datasets/tests
* A few functions for processing and merging .CSV files
* Some last renaming issues
* Some more issues from renaming
* Fix relative path in test lookup
* Remove cruft tf files and do rename
* First round of refactoring to tests
* Rename
* Cleanup pass
* Simplifying tests
* Sparse ROC-AUC tests pass
* Believe now that loss functions for keras/tf don't weight positives. Need test case
* Fixes to Metrics. Really need Metrics tests..
* Fixes to featurization code
* Cleaned up some leftover comments
* Fixed some more bugs with multitasking output sizes
* Fixing some sizing bugs and conventions for models
* Some bugfixes
* Deleting content
* Finished adding basic overfit tests. Need to clean up
* Have a tensorflow overfit test failing..
* Add simple overfit test for sklearn. Still broken
* Added simple TF overfit test. Currently failing..
* Potential fixes
* Fixing uncovered bug in Dataset.from_numpy()
* Add prediction printing back in
* Fix for 0d numpy arrays
* added molecular convolution models
* Fix most broken tests. One last broken test remains
* Cleanup of code. Some tests still broken
* Some more debugging
* Some fixes for sklearn models
* More bugfixes
* Some more test fixes
* First steps in debuggin
* Singletask numbers on MUV are now functional
* Fix to multitask/classification metrics
* Fixing some more broken tests
* Fixing broken tests
* Add new multitask order tests
* Some test debugging
* Add tasks parameter to models to ensure tasks retain ordering
* Fixes for broken tests
* Debugging singletask models
* Fix bug
* Fix comment in Model.predict
* Small fix to MolecularWeightSplitter
* Test fixes and cleanup
* Some bugfixes
* Basic molecular weight splitter class
* Remove Model and Transformer debug code
* Initial MW splitter framework
* Singletask models on MUV
* Cleaning up dynamic transform on fit/predict
* Reloading test and bugfix
* Added missing import back in
* Added SingletaskToMultitask
* Fix broken tests
* Some cleanup
* Some fixes to tests
* Forgot to add in new files
* First commit of Splitter class
* New BalancingTransformer + tests
* Basic transformers test suite
* Fix regressor cost
* Transform-on-batch in memory
* Fix merge conflict
* Transform on predict
* Dynamic transform on batch works with a data_shape trick
* update_state flag added to CoulombBinarizationTransform
* More test renaming and a fix in hyperparamopt
* Fix sklearn models with fit_transformers
* Fixed API test descriptions
* Fix for HyperparamOpt with no fit_transformers
* Update KerasModel and SKlearnModel for fit_transformers
* Update HyperparamOpt for fit_transformers
* Empty dataset creation + batch dataset creation
* Remove unneeded moments calculation
* Starting transform_on_batch
* Removed print statement
* Safe normalization for CoulombBinarizationTransformer
* Merging in with recent changes
* Adding tests for dataset statistics
* Dynamically update Transformer stats
* Write dataset moments to disk
* Add feature-wise max to binarization transform
* Minimal dataset test suite
* Update quantum machine notebook
* Forgot to commit new tests
* Fixes for broken tests
* Removed some print statements
* Fixes to get MUV models to run to completion. Bad results though
* Final version of processing script
* Added generated versions of datasets
* Non-cleaned up final draft
* Fixed some indexing and printing issues
* Some more memory overhead trimming
* Using new version
* Some updates to scripts
* Fix X,y reading for all transformer classes
* Add update_moments function to Dataset
* Add Coulomb Transformers
* Some fixes to tests
* Fix HyperparamOpt for Keras models
* Cleanup
* Adds multitask metric support
* Added multiprocessing support to vs script
* First commit of vs-datasets processing scripts
* Adding initial (failing) multitask hyperparam opt test
* Changed print statements to log statements
* Forgot to add actual tests
* Basic tests for HyperparamOpt class
* Added metrics class
* Cleanup of some commented out code
* Some more test fixes
* added docking convenience scripts
* fixed problems with docking
* Some test fixes
* Finished writing TensorflowGraph class. Now debugging tests
* Update .travis.yml
* Started untangling tf graphs from tf models
* Updated quantum_machine.ipynb
* Initial commit of MUV notebook
* Add Quantum Machine example and dataset
* Add MAE metric to evaluator
* Remove outstanding reference to ModelConfig
* Removing proto conversion script
* Removing some unneeded model_config files
* Some cleanup and renaming
* Cleanup
* Forgot to add in test_tf_api
* Trying trusty build
* Trying to upgrade g++
* Trying conda tensorflow for tests
* Tests passing locally
* generalized vina to
* py3 for datasets/construct_pdbbind_df.py
* Update __init__.py
* added check to see if already done job
* added a combination of primitives
* added ability to dock to DUD-E
* Able to run tf models in prediction mode. Still crashes due to tf/deepchem eval mismatch
* Removed use of ModelConfig class
* Started phasing out ModelConfig objects
* Now crashing at save step
* Some progress in debugging tfvs tests
* Added iterbatches to Dataset
* Did lots of surgery for tensorflow models. Now passing simplest possible tests
* Adding crystal datastructure
* tests now pass
* Continuing tf integration
* Beginning incorporation of tfvs code into deepchem
* Removing print statements
* Another fix
* Small type fix
* Most recent version of code
* Adjusted selection strings to work with NGL
* Couple more edits
* fix indentation
* fix link for keras
* Added classifiers to BACE notebook
* Handling merge conflicts
* Committing before merge from upstream
* added some visualization convenience functions
* Delete qm_user-defined.py
* Delete .qm_user-defined.py.swp
* Add User-Defined API test
* Updated BACE notebook
* Added new test and BACE ipynb
* Started fixing bugs in protein-ligand-complex tutorial
* Fixed solubility notebook and added test
* Nosetests now passing for new transforms
* Forgot to add transformers file
* First commit of transformer code
* removed openMP parallelization as option
* fixed travis.yml
* reverted nnscore.py
* removed tutorial_checkpoint and reverted nnscore.py
* deleted unncessary files
* updated travis and coulomb_matrices
* added ipython parallelization scripts
* Move _add_user_specified_features into _standardize_df.  Cleaned up some prints
* User_specified_features
* added ipyparallel parallelization
* Added featurizer CoulombMatrixEig + tests
* Fix broken tests
* Adding sudo:required to see if build probs go away
* Fixed _standardize_df for non-user defined features.  Removed print statements from deep.py
* Fixed user_defined_features usage in featurize.py.  Fixed usage of featurize function in pdbbind_nnscore.py
* Added complex backup
* Local changes
* Saved solubility printed
* fixed tutorial issue
* added compelx featurization to tutorial
* Changes to website
* Remove modeler
* Saving notebook
* First commit of completed model. Will rerun on GPU before final commit
* Committing first draft of solubility ipynb
* Local changes for solubility tutorial
* Fixing py3 shift broken by merge
* Merging with new API
* Fixing travis issues
* Partial python 3 fixes
* created tutorial
* merged changes from master
* fixed multitask case
* added ability to use any sklearn model
* Fixing typo in AWS bucket name
* Making secure vars global
* Adding print statements to push to debug secure-env vars
* Updating secure travis env variables
* uncommenting PR check
* A few fixes to docs generation
* Adding many local docs files to PR
* Misnamed sphinx-build
* Adding s3cmd install back in
* Removing unnecessary after_success build
* Changing after_success to test s3 docs deployment
* Cleanup
* Removed use of tempdir
* Trying to debug missing path issue
* Yet another alteration
* Yet another alteration
* Moving stuff back into .travis.yml
* Trying to debug import failures
* Forgot to add in install file
* Cleaning up .travis.yml. Still debugging travis breakage
* First attempt at automatic docs-build+push
* Yet another setup change
* Moving to pbr for install
* Making non-develop install possible
* Removing old-style prints and making build only on py 2.7
* One more try at debugging
* Removed RDKIT dep and fixed broken tests
* Only testing on python 2.7 due to various python 3 issues
* First version of travis build
* merged grid featurization into deepchem
* added hyperparameter search, fixed memory errors
* Removed ob_utils
* surgery
* pylint/nosestests fixes
* fixes to multitask
* Fixes to integration tests
* Some local docs changes
* fixed failing tests
* added nnscore featurization and nosetest
* First reasonable version of docs
* Dummy sphinx generated
* Gzipped to compress
* Adding CSV datasets for muv/tox21
* Pylinted all the code
* Changes for external data eval
* Adding features to allow prediction workflow
* Passing singletask/multitask test suite
* Adding preliminary multitask tests
* Debugged issue in df_to_numpy
* Added simple API test for singletask vector models
* Small merge conflict fix
* Removed some print statements
* removed print statements
* miscellaneous OOP fixes
* added dataset
* solved some bugs
* Eval bug now looks fixed. Need to fix fit() to handle minibatches
* Fixed insidious typo in train_test_split causing eval issues. Some NaN issues now though
* Fixed some bugs in sklearn model usage
* Cleaned up modeler, but eval still broken
* API fully converted. Eval still broken though..
* Fixed bug in normalization. Still bug in train/test eval
* STDNN now runs to completion, but numbers look a little suspect
* Debugged Sample class. Still crashes downstream
* Cleaned up modeler some
* First pass of Samples class
* Halfway through refactoring data-load/featurization code
* Added abstract base KerasModel class
* First stage of cleanup
* First stage of cleanup
* Save/load integrated into class
* Rename deep_chem to deepchem
* More progress in OO. Debugging model stats
* Continuing OO refactor
* Simple FeaturizedDataset tests are passing
* Basic structure of FeaturizedDataset
* Added Vanilla DNN Model impl. Stil debugging eval
* improved normalization and added parallelization
* added additional sharding to deal with GPU mem limit
* fixed issue with border mode
* fixed convolutional 3D fitting and eval
* Fixed previous commit. Now crashing on 3D CNN's
* major refactor. added eval_on_batch
* added new model and fit framework
* merged changes
* started making accept multiple feature files
* Cleanup
* Multitask fixes
* Multitask eval runs to completion. Need to fix csv saving still
* pylint fixes and python3 upgrades
* Further changes to preprocess
* Singletask sklearn/keras models training
* Singletask now running, but need to handle missing values cogently
* Initial commit of refactored dataset handling
* Pause before design review on avoiding feature-array dup in singletask
* Fixed merge conflicts
* Fixes to multitask loading pipeline
* made data munging more efficient
* More pylint for featurize
* Some more pylint fixes
* pylint fixes on modeler
* Extra fixes to make model construction easier from cmdline
* Made a few changes to make it easier to invoke model from shell script wrapper
* model command now builds basic models
* Laying further groundwork for model command
* Added first version of model command. Need to wire in connections to make it run
* Changes to linux installation
* Fixed hyperlinks in linux installation guide
* Fixed some formatting issues with the linux installation guide
* Added linux installation guide to README.md
* Fixed issues that came up in analyzing BACE dataset
* Some cleanup to remove cruft code
* Finally fixed last bugs in undoing transform
* Fixed bugs in undo_transform_outputs
* Undoing transforms is partially debugged
* Initial changes to save store transformed data
* Added ability to save keras models
* Now saving train/test data separately. Allows for eval of model on train and on test separately
* Removed extraneous imports and updated CSV files to display molecular IDs
* Minor changes for CANVAS loading
* Got model to report correct R^2
* Narrowing down bug to something wrong in modeler eval
* First stab at an added transform command
* More cleanup. Last commit before start of some API surgery
* Some cleanup in preparation for PR
* Some more loading changes
* Made featurization use vs_utils API instead of calling script
* Added saving capabilities (for sklearn) and got models to train and evaluate. Still buggy though
* required changes to load CANVAS features
* Added vs_utils to README
* First round of changes for subcommand architecture
* changes to standard
* Factored out evaluation code into separate function
* removed print and deprecated functions
* removed pycs, added .gitignore
* removed txt files
* removed pyc files
* improved functionality for featurization
* Resolved merge issues
* compatibility with 3d grid features
* fixed data processing
* Readded the code that removed the first line of csv
* Added -delimiter flag for csv input. Other fixes
* Last changes
* Adding CSV output support
* Fixed a few .csv and .xlsx file processing bugs
* Specified train/test splits now work. Thresholding for regression datasets now works
* Second batch of changes. Descriptors now work. Code for specified train/test in place, but not working yet
* Large batch of changes for descriptors. Changes broke vanilla deep-model training
* Making changes for end of day
* Responses to reviews
* Fixed some lint
* Batch of changes to fix vanilla multitask networks
* Removed unneeded import
* Changes in response to review
* SDF processing
* More tweaks
* Able to train and evaluate 3D CNNs
* first commit
* Next batch of changes required for 3D CNNs
* First steps for 3D_CNN support
* Removing duplicated public data files
* Adding preliminary 3D models
* Moved back to eval_models
* Deep Docking Changes
* Added changes to process scripts
* Changes required to run PCBA (without fixing CV split issue.)
* Removed defunct add_descriptor support
* Local changes
* Added support for weighting positives
* Local improvements
* Changes required to run RFs on globavir data
* Added beginnings of dataset-processing code
* First version that should be runnable on sherlock
* Added singletask/multitask support
* First run-through to completion
* First round of changes to run from package
* Adding __init__.py files
* Forgot to add __init__.py files
* First round of refactoring to fit new structure
* Bulk movement of code from private repo
* Adding license and setup file
* first commit
